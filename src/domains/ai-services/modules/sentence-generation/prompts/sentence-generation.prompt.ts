import { GenerateSentenceParams } from '../interfaces/generate-sentence-params.interface';
import { PromptTemplate } from '../interfaces/prompt-template.interface';

export const sentenceGenerationPrompt: PromptTemplate<GenerateSentenceParams> =
  {
    version: '1.26.0',
    template: `Создай образцовое учебное предложение для перевода с русского на английский язык.

**ЗАДАЧА**:
Создай ОДНО предложение на русском языке с использованием заданной грамматики и слова "{{russianTranslation}}" ({{partOfSpeech}}). Переведи его на английский, используя слово "{{word}}" ({{partOfSpeech}}).

**ПАРАМЕТРЫ**:
- Слово: "{{word}}" ({{partOfSpeech}}, перевод: {{russianTranslation}})
- Грамматика: "{{grammarTopic}}"
- Уровень CEFR: {{cefrLevel}}

**КЛЮЧЕВЫЕ ТРЕБОВАНИЯ**:
- ОБЯЗАТЕЛЬНО используй "{{word}}" в английском предложении СТРОГО как {{partOfSpeech}} - это КРИТИЧЕСКИ ВАЖНО
- ОБЯЗАТЕЛЬНО используй "{{russianTranslation}}" в русском предложении СТРОГО как {{partOfSpeech}} - это КРИТИЧЕСКИ ВАЖНО
- СТРОГО соблюдай грамматические функции частей речи:
  * СУЩЕСТВИТЕЛЬНОЕ (noun): должно использоваться как предмет, субъект или объект
  * ГЛАГОЛ (verb): должен выражать действие или состояние в ЕСТЕСТВЕННОМ контексте
  * ПРИЛАГАТЕЛЬНОЕ (adjective): должно описывать существительное
  * НАРЕЧИЕ (adverb): должно описывать глагол/прилагательное/другое наречие (ДЛЯ "home" - используй "at home")
  * ПРЕДЛОГ (preposition): должен связывать слова в предложении (к, на, в, под, etc.)
  * МЕСТОИМЕНИЕ (pronoun): должно заменять существительное
- Предложение должно явно демонстрировать грамматику "{{grammarTopic}}"
- ИЗБЕГАЙ бессмысленного повторения слов
- СОВЕТЫ ПО ПЕРЕВОДУ должны быть ТОЛЬКО на РУССКОМ языке
- ПРЕДЛОЖЕНИЯ ДОЛЖНЫ ЗВУЧАТЬ ЕСТЕСТВЕННО для носителей обоих языков
- ПЕРЕД ОТПРАВКОЙ ТРИЖДЫ проверь, что {{word}} использовано в английском предложении ИМЕННО как {{partOfSpeech}}

**ВАРИАТИВНОСТЬ ПРЕДЛОЖЕНИЙ**:
- СОЗДАВАЙ РАЗНООБРАЗНЫЕ предложения - не повторяй шаблоны и структуры
- ИСПОЛЬЗУЙ разные типы предложений: утвердительные, отрицательные, вопросительные
- НАЧИНАЙ предложения по-разному: с подлежащего, обстоятельства времени/места, etc.
- ВАРЬИРУЙ КОНТЕКСТЫ: быт, учеба, работа, путешествия, хобби, природа
- ПРИМЕНЯЙ различные лексические конструкции для выражения одних и тех же идей

**ОСОБЫЕ СЛУЧАИ**:
- Для "home" как наречия: всегда используй конструкцию "at home" (НЕ просто "home")
- Для "yesterday" как существительного: используй в конструкциях "yesterday's meeting", "the events of yesterday", "the date was yesterday" (НЕ используй "on yesterday" - это неестественно)
- Для глаголов (verb): используй их в естественных контекстах
  * Для "name" как глагола: "они назвали компанию...", "они называют причины..." (НЕ "name children good")
  * Для "look" как глагола: "look at", "look like", "look for" в зависимости от контекста
- Для предлогов: убедись, что предлог связывает другие слова в предложении
- Для частей недели/времён года: используй нужные предлоги (on Monday, in summer)

**ПРОЦЕСС**:
1. Создай ОРИГИНАЛЬНОЕ русское предложение уровня {{cefrLevel}} с "{{russianTranslation}}" как {{partOfSpeech}}
2. Переведи на английский, используя "{{word}}" как ту же часть речи {{partOfSpeech}}
3. ПРОВЕРЬ, что "{{word}}" используется в нужной грамматической функции согласно его части речи
4. Проверь естественность обоих предложений - они должны быть идиоматичными для носителей языка
5. Добавь полезную подсказку на РУССКОМ языке о ключевой грамматике

**ПРОВЕРЬ**:
- Часть речи {{partOfSpeech}} для "{{word}}" СТРОГО соблюдается в английском предложении
- Часть речи {{partOfSpeech}} для "{{russianTranslation}}" СТРОГО соблюдается в русском предложении
- Грамматика "{{grammarTopic}}" явно демонстрируется
- Предлоги и артикли используются правильно
- Перевод звучит ЕСТЕСТВЕННО и ИДИОМАТИЧНО на обоих языках 
- Подсказка содержит только корректную информацию
- Предложение уникально и не повторяет уже использованные шаблоны

**УРОВЕНЬ {{cefrLevel}}**:
{{#if cefrLevel === "A0"}}
4-5 слов, простейшая структура, базовая лексика
{{/if}}
{{#if cefrLevel === "A1"}}
5-7 слов, простая структура, повседневная лексика
{{/if}}
{{#if cefrLevel === "A2"}}
6-9 слов, возможны простые союзы
{{/if}}
{{#if cefrLevel === "B1"}}
8-12 слов, составная структура с союзами
{{/if}}
{{#if cefrLevel === "B2"}}
10-15 слов, сложная структура с придаточными
{{/if}}
{{#if cefrLevel === "C1Plus"}}
12-20 слов, сложноподчиненные предложения, богатая лексика
{{/if}}

**ФОРМАТ ОТВЕТА (ТОЛЬКО ОДИН JSON-ОБЪЕКТ НА КАЖДЫЙ ЗАПРОС)**:
\`\`\`json
{
  "russianTranslation": "Русское предложение для перевода",
  "englishSentence": "Правильный английский перевод",
  "translationTips": "Подсказка на РУССКОМ языке о ключевой грамматике",
  "literalTranslation": "Дословный перевод для понимания структуры"
}
\`\`\`

ВАЖНО:
1. Проверь ответ 3 РАЗА перед отправкой, чтобы убедиться, что "{{word}}" используется в английском предложении СТРОГО как {{partOfSpeech}}!
2. Убедись, что возвращаешь ТОЛЬКО ОДИН ОБЪЕКТ JSON (не массив!) для каждого запроса.
3. ПРОВЕРЬ естественность английского предложения - спроси себя: "Сказал бы так носитель языка?"`,

    render: (params: GenerateSentenceParams): string => {
      let resultString = sentenceGenerationPrompt.template;

      // Заменяем все плейсхолдеры их значениями
      Object.entries(params).forEach(([key, value]) => {
        resultString = resultString.replace(
          new RegExp(`{{${key}}}`, 'g'),
          value,
        );
      });

      // Обрабатываем условные блоки для конкретного уровня CEFR
      const cefrLevel = params.cefrLevel;
      const cefrLevels = ['A0', 'A1', 'A2', 'B1', 'B2', 'C1Plus'];

      cefrLevels.forEach((level) => {
        const ifPattern = new RegExp(
          `{{#if cefrLevel === "${level}"}}([\\s\\S]*?){{/if}}`,
          'g',
        );

        if (level === cefrLevel) {
          // Если это текущий уровень, удаляем теги условия, но оставляем содержимое
          resultString = resultString.replace(ifPattern, (_match, content) => {
            return String(content);
          });
        } else {
          // Если это не текущий уровень, удаляем весь блок
          resultString = resultString.replace(ifPattern, '');
        }
      });

      return resultString;
    },
  };
